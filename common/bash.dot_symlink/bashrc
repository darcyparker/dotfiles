#!/usr/bin/env bash
so() { [ -s $1 ] && source $1; }

# Identify env with uname, make it lower case, only take first part before _
# ENV_NAME is used to call appropriate bash options for the environment. (ie darwin, cygwin, etc...)
# uname -o option doesn't work on Darwin (sed required for cygwin to remove _ and trailing text)
export ENV_NAME=$(uname -s | tr '[:upper:]' '[:lower:]' | sed -e 's/_.*//')

#Load Env specific bash stuff first
#  This is particularly important for cygwin because settings like
#  `export CYGWIN="..."` needs to be set before some stuff like nodejs commands
#  will give an error message

so ~/.bash/256color.sh
so ~/.bash/bash_${ENV_NAME} # Env specific bash stuff
so ~/.bash/bash_common # Common bash stuff
so ~/.bash/bash_prompt
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

# Call useful bash snippets
#so ~/.bash/pathed_cd
# so ~/.bash/saveMYIP

# Move (or Add) /usr/local/bin to the front of the path
[[ -d /usr/local/bin ]] && export PATH=$(echo /usr/local/bin:$PATH | sed -e "s;:/usr/local/bin;;")

# Move (or Add) npm's bin folder to the front of the path
# Note, $NPMPREFIXBIN is already set by bash_cygwin because I use win32 node and npm
[[ -z $NPMPREFIXBIN ]] && [[ `which npm 2> /dev/null` ]] && NPMPREFIXBIN=`npm config get prefix`/bin
[[ -d $NPMPREFIXBIN ]] && export PATH=$(echo $NPMPREFIXBIN:$PATH | sed -e "s;:$NPMPREFIXBIN;;")
unset NPMPREFIXBIN

[[ -d $HOME/.rvm/bin ]] && export PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting

# if there is a bin folder in home, add it to PATH
[[ -d ~/bin ]] && export PATH=~/bin:$PATH

#Source/evaluate bash completion
#[[ `which npm` ]] && eval "$(npm completion -)"
#grunt and bower bash completion must be added after updating $PATH
[[ `which grunt 2> /dev/null` ]] && eval "$(grunt --completion=bash)"
[[ `which bower 2> /dev/null` ]] && eval "$(bower completion)"

[[ -d /usr/local/lib/jsctags ]] && export NODE_PATH=/usr/local/lib/jsctags/:$NODE_PATH
