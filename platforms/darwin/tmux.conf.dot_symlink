# Set tmux prefix to Ctrl-a and unbind the default Ctrl-b prefix
set -g prefix C-a
unbind C-b

# Ctrl-a is the prefix. To send Ctrl-a to programs (such as vim) inside
# tmux use Ctrl-a Ctrl-a
bind C-a send-prefix

# reduce the delay inbetween tmux commands so that it doesn't interfer with
# entering vim keystrokes right away after changing tmux panes/windows
set -sg escape-time 1

# The base index for windows and panes to 1 instead of the default 0.
# Now prefix 1 is the first window instead of a prefix 0 being the first.
set -g base-index 1
setw -g pane-base-index 1

# Reload tmux.conf with prefix-r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# Set the term environment variable when using tmux
set -g default-terminal "screen-256color"

# bind | and - to horizontal and vertical split respectively.
# | and - is easier to remember because of the visual symbolism.
# Not necessarily easier to type though... so may consider another binding
bind | split-window -h
bind - split-window -v

# bind movements between panes to h,j,k,l
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# bind movements between windows to Ctrl-h and Ctrl-l (left,right)
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# bind resizing of panes to H,J,K,L (resizes by steps of 5 lines/columns)
# Note, bindings are repeatable (within the default 500ms time limit) so that
# you don't have to keep entering the prefix. (Prefix-H-H-H resizes by 15)
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# copy/paste bindings
#  Escape to switch to copy mode
#  v to start visual mode
#  y to yank selected text into copy buffer
#  p to paste text from buffer
#  use vi movements when working inside the tmux buffer
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection
setw -g mode-keys vi

# To use pbcopy and pbpaste on OS X, get this wrapper and install
#    git clone https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard.git
#    cd tmux-MacOSX-pasteboard/
#    make reattach-to-user-namespace
#    mv reattach-to-user-namespace /usr/local/bin
# After installing, the default command can be reset to use the 'reattach-to-user-namespace' 
# wrapper that was compiled/installed as descripted above.
set -g default-command "reattach-to-user-namespace -l /bin/bash"
# #Next, create Ctrl-c and Ctrl-v mappings
bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
bind C-v run "tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste-buffer"

# Enable mouse in tmux. (can select panes, resize panes, and select windows with the mouse.)
# (The mouse can slow me down... but I like it at times.)
setw -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on

setw -g xterm-keys on

# toggle to last window like screen
bind-key C-x last-window

# status bar colors (unactive windows cyan on default background and active window in white on red)
set -g status-fg white
set -g status-bg black
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

#pane divider colors (active is white on yellow, and inactive is green on black)
set -g pane-border-fg green
set -g pane-border-bg black
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow

# Command line/Message line colors (bright white on black)
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# Status bar Settings
# Variable           Description
# --------           -----------
# #H                 Hostname of local host
# #h                 Hostname of local host without the domain name #F Current window flag
# #I                 Current window index
# #P                 Current pane index
# #S                 Current session name
# #T                 Current window title
# #W                 Current window name
# ##                 A literal #
# #(shell-command)  First line of the shell commandâ€™s output #[attributes] Color or attribute change
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
set -g status-right "#[fg=cyan]%d %b %R"
# turn on utf-8 support for statusline in case I want to use utf-8 in status line in future
set -g status-utf8 on
# refresh status line every 60 seconds (this is sufficient to keep time current) (don't set this too low)
set -g status-interval 60
# provide visual notification in status bar when a window's content changes
setw -g monitor-activity on
set -g visual-activity on
# Center the window list
set -g status-justify centre
